#if statements
if x < 0:
    x = 0
    print('Negative changed to zero')
elif x == 0:
    print('Zero')
elif x == 1:
    print('Single')
else:
    print('More')
#for statements
#If you do need to iterate over a sequence of numbers, the built-in function range() comes in handy. 
for n in range(2, 10):
    for x in range(2, n):
        if n % x == 0:
            print(n, 'equals', x, '*', n//x)
            break
    else:
        # loop fell through without finding a factor
        print(n, 'is a prime number')
# Create a sample collection
users = {'Hans': 'active', 'Elen': 'inactive', 'bob': 'active'}
# Strategy:  Iterate over a copy
for user, status in users.copy().items():
    if status == 'inactive':
        del users[user]
# Strategy:  Create a new collection
active_users = {}
for user, status in users.items():
    if status == 'active':
        active_users[user] = status
a = ['Mary', 'had', 'a', 'little', 'lamb']
for i in range(len(a)):
    print(i, a[i])
#generate list
data = [i for i in range(0, 10)]
data = [i for i in "python"]
#generate list with condition
data = [i for i in range(0, 10) if i % 2 == 0]